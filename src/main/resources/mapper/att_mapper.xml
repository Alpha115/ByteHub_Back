<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bytehub.attendance.AttDAO">

	<!-- 출퇴근 기록 생성  -->
    <insert id="insertAttendance" parameterType="com.bytehub.attendance.AttDTO" useGeneratedKeys="true" keyProperty="att_idx">
        INSERT INTO attendance (user_id, att_date, in_time, out_time, att_type)
        VALUES (#{user_id}, #{att_date}, #{in_time}, #{out_time}, #{att_type})
    </insert>
    
    <!-- 인증 기록 생성 -->
    <insert id="insertAttHistory" parameterType="com.bytehub.attendance.AttHistoryDTO" useGeneratedKeys="true" keyProperty="cert_his_idx">
        INSERT INTO att_history (att_idx, cert_no, cert_status, cert_time)
        VALUES (#{att_idx, jdbcType=INTEGER}, #{cert_no}, #{cert_status}, #{cert_time})
    </insert>
    
    <!-- 출퇴근 기록 수정 -->
    <update id="attUpdate" parameterType="com.bytehub.attendance.AttDTO">
        UPDATE attendance 
        SET in_time = #{in_time}, 
            out_time = #{out_time}, 
            att_type = #{att_type}
        WHERE att_idx = #{att_idx}
    </update>
    
    <!-- 출근/퇴근/지각/조퇴/결석 내역 조회 기능 -->
    
    
    <select id="attList" parameterType="string" resultType="com.bytehub.attendance.AttDTO">
	    SELECT 
	        a.att_idx, a.user_id, a.att_date, a.in_time, a.out_time, a.att_type,
	        m.name, d.dept_name
	    FROM attendance a
	    JOIN member m ON a.user_id = m.user_id
	    LEFT JOIN department d ON m.dept_idx = d.dept_idx
	    WHERE a.user_id = #{user_id}
	    ORDER BY a.att_date DESC, a.in_time DESC
	</select>
    
    <!-- 전체 직원 근태 조회 -->
    <select id="attListAll" resultType="com.bytehub.attendance.AttDTO">
	    SELECT 
	        a.att_idx, a.user_id, a.att_date, a.in_time, a.out_time, a.att_type,
	        m.name, d.dept_name
	    FROM attendance a
	    JOIN member m ON a.user_id = m.user_id
	    LEFT JOIN department d ON m.dept_idx = d.dept_idx
	    WHERE m.status = '재직'
	    ORDER BY a.att_date DESC, a.in_time DESC
	</select>
    
    <!-- 특정 출퇴근 기록 조회 -->
    <select id="attDetail" parameterType="int" resultType="com.bytehub.attendance.AttDTO">
        SELECT att_idx, user_id, att_date, in_time, out_time, att_type
        FROM attendance 
        WHERE att_idx = #{att_idx}
    </select>
    
    <!-- 출/퇴근 시간 설정 기능 : 출퇴근 기준 시간 생성 -->
    <insert id="createAttSetting" parameterType="com.bytehub.attendance.AttSettingDTO">
    INSERT INTO att_setting (user_id, set_in_time, set_out_time, term)
    VALUES (#{user_id}, #{set_in_time}, #{set_out_time}, #{term})
    </insert>
    
    <!-- 출/퇴근 시간 설정 기능 : 출퇴근 기준 시간 수정 -->
	<update id="updateAttSetting" parameterType="com.bytehub.attendance.AttSettingDTO">
	    UPDATE att_setting 
	    SET set_in_time = #{set_in_time}, 
	        set_out_time = #{set_out_time}, 
	        term = #{term}
	    WHERE time_set_idx = #{time_set_idx} 
	</update>
	
	<!-- 출/퇴근 시간 설정 기능 : 현재 적용되는 기준 시간 조회 -->
	<select id="getAttSetting" parameterType="string" resultType="com.bytehub.attendance.AttSettingDTO">
	    SELECT time_set_idx, user_id, set_in_time, set_out_time, term
	    FROM att_setting
	    WHERE user_id = #{user_id}
	    LIMIT 1
	</select>
	
	<!-- 근태 통계 -->
	<select id="attStat" resultType="map">
		SELECT att_type, COUNT(*) as cnt
		FROM attendance
		WHERE user_id = #{user_id}
		GROUP BY att_type
	</select>
	
</mapper>